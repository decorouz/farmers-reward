# Generated by Django 5.0.6 on 2024-07-03 13:03

import django.db.models.deletion
import market.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cities_light", "0011_alter_city_country_alter_city_region_and_more"),
        ("market", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        choices=[("B", "Bronze"), ("S", "Silver"), ("G", "Gold")],
                        default="B",
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("image", models.ImageField(upload_to="farmers/badges/")),
                (
                    "image_thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="badges/thumbnails/"
                    ),
                ),
                ("points_required", models.PositiveIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FarmersCooperative",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("chairman", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=13, unique=True)),
                ("location", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("registeration_date", models.DateField(auto_now_add=True)),
                ("registration_number", models.CharField(max_length=255, unique=True)),
                ("verification_status", models.BooleanField(default=False)),
                ("number_of_members", models.SmallIntegerField(default=0)),
                ("blacklisted", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CultivatedField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                ("field_size", models.FloatField(blank=True, null=True)),
                ("soil_test", models.BooleanField(default=False)),
                ("town", models.CharField(max_length=255)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("logitude", models.FloatField(blank=True, null=True)),
                ("slug", models.SlugField(unique=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.country",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.region",
                    ),
                ),
                (
                    "sub_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cities_light.subregion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Farmer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(blank=True, null=True, verbose_name="Birthday"),
                ),
                (
                    "education",
                    models.IntegerField(
                        choices=[
                            (1, "None or did not complete primary school"),
                            (2, "Completed primary school"),
                            (3, "Completed secondary school"),
                            (4, "Completed higher education"),
                            (5, "Religious or informal education"),
                            (888, "Don't know"),
                            (999, "Refused"),
                        ]
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(default="9****", max_length=13, unique=True),
                ),
                ("verification_status", models.BooleanField(default=False)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("blacklisted", models.BooleanField(default=False)),
                (
                    "means_of_identification",
                    models.CharField(
                        choices=[
                            ("ND", "National ID"),
                            ("IP", "International Passport"),
                            ("DL", "Driver's License"),
                        ],
                        default="ND",
                        max_length=2,
                    ),
                ),
                (
                    "identification_number",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "id_photo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="farmers/identification_proof/",
                        validators=[market.validators.validate_file_size],
                    ),
                ),
                (
                    "captured_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="farmers/captured_photo/",
                        validators=[market.validators.validate_file_size],
                    ),
                ),
                ("verification_date", models.DateField(auto_now_add=True)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("SH", "Smallholder"),
                            ("SMH", "Small to Medium Holder"),
                        ],
                        default="SMH",
                        max_length=3,
                    ),
                ),
                (
                    "agricultural_activities",
                    models.IntegerField(
                        choices=[
                            (1, "Crop Producer"),
                            (2, "Livestock Producer"),
                            (3, "Crop and Livestock Producer"),
                        ],
                        default=1,
                    ),
                ),
                ("farmsize", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "state_of_origin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="cities_light.subregion",
                    ),
                ),
                (
                    "state_of_residence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="cities_light.region",
                    ),
                ),
                (
                    "cooperative_society",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="farmer",
                        to="farmers.farmerscooperative",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CultivatedFieldHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                (
                    "farming_system",
                    models.CharField(
                        choices=[
                            ("MONO", "Mono Cropping"),
                            ("MULTI", "Multi Cropping"),
                            ("INTER", "Inter-Cropping"),
                        ],
                        default="MONO",
                        max_length=7,
                    ),
                ),
                ("primary_crop_type", models.CharField(default="Wheat", max_length=50)),
                (
                    "secondary_crop_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("pri_crop_planting_date", models.DateField(blank=True, null=True)),
                ("sec_crop_planting_date", models.DateField(blank=True, null=True)),
                ("pri_crop_harvest_date", models.DateField(blank=True, null=True)),
                ("sec_crop_harvest_date", models.DateField(blank=True, null=True)),
                (
                    "pri_crop_yield",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "sec_crop_yield",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("fertilizer_use", models.BooleanField(default=False)),
                ("fertilizer_qty", models.FloatField(blank=True, null=True)),
                ("manure_compost_use", models.BooleanField(default=False)),
                (
                    "average_ridge_weed_biomass",
                    models.FloatField(blank=True, null=True),
                ),
                ("striga", models.BooleanField(default=False)),
                ("row_spacing", models.FloatField(blank=True, null=True)),
                (
                    "cultivated_field",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cultivated_field_history",
                        to="farmers.cultivatedfield",
                    ),
                ),
                (
                    "farmer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cultivated_fields",
                        to="farmers.farmer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FarmersMarketTransaction",
            fields=[
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("quantity", models.PositiveSmallIntegerField()),
                ("transaction_date", models.DateField(auto_now=True)),
                ("points_earned", models.IntegerField(default=0, editable=False)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="transactions",
                        to="farmers.farmer",
                    ),
                ),
                (
                    "market",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="transactions",
                        to="market.market",
                    ),
                ),
                (
                    "produce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="market.product"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FieldExtensionOfficer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateField(auto_now_add=True)),
                ("updated_on", models.DateField(auto_now=True)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(blank=True, null=True, verbose_name="Birthday"),
                ),
                (
                    "education",
                    models.IntegerField(
                        choices=[
                            (1, "None or did not complete primary school"),
                            (2, "Completed primary school"),
                            (3, "Completed secondary school"),
                            (4, "Completed higher education"),
                            (5, "Religious or informal education"),
                            (888, "Don't know"),
                            (999, "Refused"),
                        ]
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(default="9****", max_length=13, unique=True),
                ),
                ("verification_status", models.BooleanField(default=False)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("blacklisted", models.BooleanField(default=False)),
                (
                    "means_of_identification",
                    models.CharField(
                        choices=[
                            ("ND", "National ID"),
                            ("IP", "International Passport"),
                            ("DL", "Driver's License"),
                        ],
                        default="ND",
                        max_length=2,
                    ),
                ),
                (
                    "identification_number",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "id_photo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="farmers/identification_proof/",
                        validators=[market.validators.validate_file_size],
                    ),
                ),
                (
                    "captured_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="farmers/captured_photo/",
                        validators=[market.validators.validate_file_size],
                    ),
                ),
                ("verification_date", models.DateField(auto_now_add=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "state_of_origin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="cities_light.subregion",
                    ),
                ),
                (
                    "state_of_residence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="cities_light.region",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="farmer",
            name="field_extension_officer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="farmer",
                to="farmers.fieldextensionofficer",
            ),
        ),
        migrations.CreateModel(
            name="SoilProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texture", models.CharField(max_length=100)),
                ("pH", models.DecimalField(decimal_places=2, max_digits=4)),
                ("organic_matter", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "nitrogen_content",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "phosphorus_content",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "potassium_content",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("soil_test_date", models.DateField(auto_now=True)),
                ("soil_lab", models.CharField(default="IITA Soil Lab", max_length=255)),
                (
                    "test_results_file",
                    models.FileField(blank=True, null=True, upload_to="soil_tests/"),
                ),
                (
                    "cultivated_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="soil_properties",
                        to="farmers.cultivatedfield",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_on", models.DateTimeField(auto_now_add=True)),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="farmers.badge"
                    ),
                ),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="farmers.farmer"
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="cultivatedfield",
            constraint=models.UniqueConstraint(
                fields=("id",), name="unique_field_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="cultivatedfieldhistory",
            constraint=models.UniqueConstraint(
                fields=("cultivated_field", "created_on"),
                name="unique_cultivated_field_history",
            ),
        ),
        migrations.AddConstraint(
            model_name="fieldextensionofficer",
            constraint=models.UniqueConstraint(
                fields=("identification_number",), name="unique_feo_id_number"
            ),
        ),
        migrations.AddConstraint(
            model_name="farmer",
            constraint=models.UniqueConstraint(
                fields=("identification_number",), name="unique_farmer_id_number"
            ),
        ),
        migrations.AddConstraint(
            model_name="soilproperty",
            constraint=models.UniqueConstraint(
                fields=("cultivated_field", "soil_test_date"),
                name="unique_soil_test_date",
            ),
        ),
    ]
