# Generated by Django 5.0.6 on 2024-06-27 14:39

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cities_light", "0011_alter_city_country_alter_city_region_and_more"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("farmers", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agrochemical",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "kilogram"),
                            ("ltr", "liter"),
                            ("bag", "bag"),
                            ("acre", "Acres"),
                            ("ha", "hectare"),
                            ("packet", "per packet"),
                            ("bottle", "per bottle"),
                        ],
                        default="ltr",
                        max_length=20,
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "agrochemical_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PRE", "Pre Emergence Herbicide"),
                            ("POS", "Post Emergence Herbicide"),
                            ("PES", "Pesticide"),
                            ("INT", "Insecticide"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Fertilizer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "fertilizer_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NPK", "Npk"),
                            ("UREA", "Urea"),
                            ("SSP", "Single Super Phosphate"),
                            ("MP", "Muriate of Potash"),
                            ("DP", "Diammonium Phosphate"),
                            ("OTHER", "Others"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "kilogram"),
                            ("ltr", "liter"),
                            ("bag", "bag"),
                            ("acre", "Acres"),
                            ("ha", "hectare"),
                            ("packet", "per packet"),
                            ("bottle", "per bottle"),
                        ],
                        default="bag",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InputPriceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mechanization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "mechanization_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PLOUGH", "Disc Plough"),
                            ("HARROW", "Harrow"),
                            ("RIDGE", "Ridge"),
                            ("FERT_APP", "Fertilizer Application"),
                            ("PLANTING", "Planting"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "kilogram"),
                            ("ltr", "liter"),
                            ("bag", "bag"),
                            ("acre", "Acres"),
                            ("ha", "hectare"),
                            ("packet", "per packet"),
                            ("bottle", "per bottle"),
                        ],
                        default="ha",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "seed_variety",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "kilogram"),
                            ("ltr", "liter"),
                            ("bag", "bag"),
                            ("acre", "Acres"),
                            ("ha", "hectare"),
                            ("packet", "per packet"),
                            ("bottle", "per bottle"),
                        ],
                        default="kg",
                        max_length=20,
                    ),
                ),
                (
                    "seed_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MAIZE", "Maize"),
                            ("COWPEA", "Cowpea"),
                            ("SOYBEAN", "Soybean"),
                            ("RICE", "Rice"),
                            ("SORGHUM", "Sorghum"),
                            ("MILLET", "Millet"),
                            ("GROUNDNUT", "Groundnut"),
                            ("COTTON", "Cotton"),
                            ("SESAME", "Sesame"),
                            ("YAM", "Yam"),
                            ("CASSAVA", "Cassava"),
                            ("TOMATO", "Tomatoe"),
                            ("PEPPER", "Pepper"),
                            ("OTHER", "Others"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubsidizedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SEED", "Seed"),
                            ("FERT", "Fertilizer"),
                            ("MECH", "Mechanization"),
                            ("CHEM", "Chemical"),
                        ],
                        max_length=255,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("date", models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SubsidyInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("redemption_date", models.DateField(auto_now_add=True)),
                (
                    "discounted_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, editable=False, max_digits=7
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubsidyProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("objective", models.CharField(blank=True, max_length=255, null=True)),
                ("slug", models.SlugField(unique=True)),
                (
                    "source_of_funding",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "program_director",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "administrator_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "legislation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("number_of_beneficiaries", models.SmallIntegerField(default=0)),
                (
                    "program_adminstrator",
                    models.CharField(
                        choices=[
                            ("STATE", "State Government"),
                            ("NATIONAL", "National Government"),
                            ("NGO", "Non Governmental Organization"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "budget_in_naira",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=40, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubsidyRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=1, default=Decimal("50"), max_digits=4
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="agrochemical",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("name__iexact", django.db.models.functions.text.Lower("name"))
                ),
                fields=("agrochemical_name", "name"),
                name="unique_agrochemical_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="fertilizer",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("name__iexact", django.db.models.functions.text.Lower("name"))
                ),
                fields=("name", "fertilizer_type"),
                name="unique_fertilizer",
            ),
        ),
        migrations.AddField(
            model_name="inputpricehistory",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddConstraint(
            model_name="mechanization",
            constraint=models.UniqueConstraint(
                fields=("mechanization_operation",),
                name="unique_mechanization_operation",
            ),
        ),
        migrations.AddConstraint(
            model_name="seed",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    (
                        "seed_variety__iexact",
                        django.db.models.functions.text.Lower("seed_variety"),
                    )
                ),
                fields=("seed_type", "seed_variety"),
                name="unique_seed",
            ),
        ),
        migrations.AddField(
            model_name="subsidizeditem",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="subsidyinstance",
            name="farmer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="farmers_subsidy",
                to="farmers.farmer",
            ),
        ),
        migrations.AddField(
            model_name="subsidyinstance",
            name="subsidized_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="farmers_subsidy",
                to="subsidy.subsidizeditem",
            ),
        ),
        migrations.AddField(
            model_name="subsidyprogram",
            name="country",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="cities_light.country",
            ),
        ),
        migrations.AddField(
            model_name="subsidyprogram",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="cities_light.region",
            ),
        ),
        migrations.AddField(
            model_name="subsidyinstance",
            name="subsidy_program",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="farmers_subsidy",
                to="subsidy.subsidyprogram",
            ),
        ),
        migrations.AddField(
            model_name="subsidyrate",
            name="subsidized_item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subsidy_rate",
                to="subsidy.subsidizeditem",
            ),
        ),
        migrations.AddField(
            model_name="subsidyrate",
            name="subsidy_program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subsidy_rate",
                to="subsidy.subsidyprogram",
            ),
        ),
        migrations.AddIndex(
            model_name="subsidizeditem",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="subsidy_sub_content_e2e079_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="subsidizeditem",
            constraint=models.UniqueConstraint(
                fields=("content_type", "object_id"), name="unique_subsidized_item"
            ),
        ),
        migrations.AddConstraint(
            model_name="subsidyinstance",
            constraint=models.UniqueConstraint(
                fields=("farmer", "subsidized_item", "subsidy_program"),
                name="unique_farmer_subsidy",
            ),
        ),
        migrations.AddConstraint(
            model_name="subsidyrate",
            constraint=models.UniqueConstraint(
                fields=("subsidy_program", "subsidized_item"),
                name="unique_subsidy_rate",
            ),
        ),
    ]
